@using BrokenLinkChecker.models
@using Microsoft.AspNetCore.Components.QuickGrid

@rendermode InteractiveServer

<h3>Performance Stats</h3>

@if (VisitedPages.Count > 0)
{
    <p>Average page speed: @GetAveragePageSpeed() ms</p>

    <QuickGrid Items="@VisitedPages.AsQueryable()">
        <PropertyColumn Property="@(page => page.Url)" Sortable="true"/>
        <PropertyColumn Property="@(page => page.StatusCode)" Sortable="true"/>
        <PropertyColumn Property="@(page => page.ResponseTime)" Sortable="true"/>
        <PropertyColumn Property="@(page => page.DocumentParseTime)" Sortable="true"/>
    </QuickGrid>
}
else
{
    <p>Performance stats are only available once the entire site has been analysed...</p>
}


@code {
    [Parameter]
    public ICollection<PageStats> VisitedPages { get; set; }

    private long GetAveragePageSpeed()
    {
        if (VisitedPages.Count == 0)
        {
            return 0;
        }

        long totalResponseTime = VisitedPages.Sum(page => page.ResponseTime);
        return totalResponseTime / VisitedPages.Count;
    }
}